/* eslint-disable @next/next/no-script-component-in-head */
import MarkerComponent from "@/components/MarkerComponent.client";
import ReduxProvider from "@/redux-toolkit/ReduxProvider";
import type { Metadata } from "next";
import dynamic from "next/dynamic";
import React from "react";
import ClientOnly from "../components/ClientOnly";
import "./globals.css";
// import { Hydrate, QueryClient, QueryClientProvider } from "react-query";
import ClientSide from "@/components/ClientSide/ClientSide";
import Head from "next/head";
import Script from "next/script";
import EventListeners from "@/components/EventListener/EventListener";

const Navbar = dynamic(() => import("../components/navbar/Navbar"), {
  ssr: false,
});

const Footer = dynamic(() => import("@/components/footer/Footer"), {
  ssr: false,
});

export const metadata: Metadata = {
  title: "atHomee",
  description: "Generated by create next app",
};
declare global {
  interface Window {
    dataLayer: any[]; // Define dataLayer as an array of any type
  }
}
export default function RootLayout({
  children,
  pageProps,
}: {
  children: React.ReactNode;
  pageProps: any;
}) {
  // const queryClient = new QueryClient();
  return (
    <html lang="en">
      <Head>
        <script
          async
          src="https://www.googletagmanager.com/gtag/js?id=G-HM0LP71JHD"
        ></script>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              window.dataLayer = window.dataLayer || [];
              function gtag(){dataLayer.push(arguments);}
              gtag('js', new Date());

              gtag('config', 'G-HM0LP71JHD');
            `,
          }}
        />

        <link rel="icon" href="/favicon.ico" />
      </Head>

      <body className="body">
        <ClientOnly>
          <Navbar />
        </ClientOnly>
        {/* <ClientOnly>
          <EventListeners />
        </ClientOnly> */}
        <MarkerComponent />
        <ReduxProvider>
          {/* <QueryClientProvider client={queryClient}> */}
          {/* <Hydrate state={pageProps.dehydratedState}> */}
          <ClientSide children={children} pageProps={pageProps} />
          {/* {children} */}
          {/* </Hydrate> */}
          {/* </QueryClientProvider> */}
        </ReduxProvider>
        <ClientOnly>
          <Footer />
        </ClientOnly>
      </body>
    </html>
  );
}
